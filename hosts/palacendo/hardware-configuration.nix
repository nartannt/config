# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/2c656dcb-5d2d-4148-8025-68007b4404bc";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-4aef4ec5-38fb-4ff5-b27b-d5a7089eeb82".device = "/dev/disk/by-uuid/4aef4ec5-38fb-4ff5-b27b-d5a7089eeb82";
  boot.initrd.luks.devices."luks-447b1f65-8e97-4bd1-8997-801ec997e043".device = "/dev/disk/by-uuid/447b1f65-8e97-4bd1-8997-801ec997e043";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/34F1-6C28";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/127b2d58-b95a-4fb6-823a-349b0c3d1292"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s31f6.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
